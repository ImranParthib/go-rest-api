{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\root.tsx\");\n}\n// REMIX HMR END\n\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from \"@remix-run/react\";\nimport styles from \"./tailwind.css\";\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: styles\n}];\nexport default function App() {\n  return <html lang=\"en\">\r\n            <head>\r\n                <meta charSet=\"utf-8\" />\r\n                <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n                <Meta />\r\n                <Links />\r\n            </head>\r\n            <body>\r\n                <Outlet />\r\n                <ScrollRestoration />\r\n                <Scripts />\r\n                <LiveReload />\r\n            </body>\r\n        </html>;\n}\n_c = App;\nexport function ErrorBoundary() {\n  return <html>\r\n            <head>\r\n                <title>Oops!</title>\r\n                <Meta />\r\n                <Links />\r\n            </head>\r\n            <body>\r\n                <div className=\"error-container\">\r\n                    <h1>Something went wrong</h1>\r\n                    <p>There was an error loading this page</p>\r\n                </div>\r\n                <Scripts />\r\n            </body>\r\n        </html>;\n}\n_c2 = ErrorBoundary;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AA4BgB;AA3BhB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sBAAwB,EAAE;AAAA,EACnE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAe;AACjB;AAKO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AACc,SAAR,MAAuB;AAC5B,SAAO,mDAAC,UAAK,MAAK,MACR;AAAA,uDAAC,UACG;AAAA,yDAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,UAAK,MAAK,YAAW,SAAQ,wCAA9B;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MACnE,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,UACG;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SAJhB;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAZH;AAAA;AAAA;AAAA;AAAA,SAaD;AACR;AACA,KAAK;AACE,SAAS,gBAAgB;AAC9B,SAAO,mDAAC,UACE;AAAA,uDAAC,UACG;AAAA,yDAAC,WAAM,qBAAP;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,MACZ,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,mDAAC,UACG;AAAA,yDAAC,SAAI,WAAU,mBACX;AAAA,2DAAC,QAAG,oCAAJ;AAAA;AAAA;AAAA;AAAA,eAAwB;AAAA,QACxB,mDAAC,OAAE,oDAAH;AAAA;AAAA;AAAA;AAAA,eAAuC;AAAA,WAF3C;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,SALb;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OAZH;AAAA;AAAA;AAAA;AAAA,SAaD;AACR;AACA,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,KAAK;AACtB,aAAa,KAAK,eAAe;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
