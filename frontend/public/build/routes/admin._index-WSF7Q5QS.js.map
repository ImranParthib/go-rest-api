{
  "version": 3,
  "sources": ["../../../app/routes/admin._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\admin._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\admin._index.tsx\");\n  import.meta.hot.lastModified = \"1742298269748.6516\";\n}\n// REMIX HMR END\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"@remix-run/react\";\nconst API_URL = 'http://localhost:8080/api/products';\n\n// Product category options\nconst CATEGORIES = ['Tops', 'Bottoms', 'Outerwear', 'Dresses', 'Accessories', 'Footwear', 'Activewear'];\n\n// Size options\nconst SIZES = ['XS', 'S', 'M', 'L', 'XL', 'XXL', '28', '30', '32', '34', '36', '38', '40', 'One Size'];\nexport default function AdminPage() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Form states\n  const [showForm, setShowForm] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    price: 0,\n    image: '',\n    description: '',\n    category: 'Tops',\n    size: 'M',\n    color: ''\n  });\n\n  // Fetch all products\n  const fetchProducts = () => {\n    setLoading(true);\n    fetch(API_URL).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setProducts(data);\n      setLoading(false);\n    }).catch(err => {\n      setError('Failed to fetch products: ' + err.message);\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: name === 'price' ? parseInt(value, 10) || 0 : value\n    });\n  };\n\n  // Clear form and messages\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      price: 0,\n      image: '',\n      description: '',\n      category: 'Tops',\n      size: 'M',\n      color: ''\n    });\n    setEditingProduct(null);\n    setError('');\n    setSuccess('');\n  };\n\n  // Open form for creating a new product\n  const handleAddNew = () => {\n    resetForm();\n    setShowForm(true);\n  };\n\n  // Open form for editing a product\n  const handleEdit = product => {\n    setFormData({\n      name: product.name,\n      price: product.price,\n      image: product.image,\n      description: product.description,\n      category: product.category || 'Tops',\n      size: product.size || 'M',\n      color: product.color || ''\n    });\n    setEditingProduct(product);\n    setShowForm(true);\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n\n    // Validation\n    if (!formData.name || formData.price <= 0 || !formData.image || !formData.description || !formData.color) {\n      setError('Please fill all fields with valid values');\n      return;\n    }\n    const isEditing = !!editingProduct;\n    const url = isEditing ? `${API_URL}/${editingProduct.id}` : API_URL;\n    const method = isEditing ? 'PUT' : 'POST';\n    fetch(url, {\n      method,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to save product');\n      }\n      return response.json();\n    }).then(() => {\n      setSuccess(isEditing ? 'Product updated successfully!' : 'Product created successfully!');\n      fetchProducts();\n      resetForm();\n      setShowForm(false);\n    }).catch(err => {\n      setError('Error: ' + err.message);\n    });\n  };\n\n  // Delete a product\n  const handleDelete = id => {\n    if (window.confirm('Are you sure you want to delete this product?')) {\n      fetch(`${API_URL}/${id}`, {\n        method: 'DELETE'\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to delete product');\n        }\n        return response.json();\n      }).then(() => {\n        setSuccess('Product deleted successfully!');\n        fetchProducts();\n      }).catch(err => {\n        setError('Error: ' + err.message);\n      });\n    }\n  };\n  if (loading && products.length === 0) {\n    return <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\r\n                <div className=\"flex justify-center items-center p-10\">\r\n                    <p className=\"text-lg\">Loading products...</p>\r\n                </div>\r\n            </div>;\n  }\n  return <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\r\n            <div className=\"mb-6\">\r\n                <Link to=\"/\" className=\"inline-block px-4 py-2 bg-gray-200 rounded text-gray-700 hover:bg-gray-300\">\r\n                    \u2190 Back to Shop\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n                <h1 className=\"text-2xl font-bold\">Clothing Store Administration</h1>\r\n                <button className=\"btn btn-primary\" onClick={handleAddNew}>\r\n                    Add New Product\r\n                </button>\r\n            </div>\r\n\r\n            {error && <p className=\"text-red-600 my-4\">{error}</p>}\r\n            {success && <p className=\"text-green-600 my-4\">{success}</p>}\r\n\r\n            {showForm && <div className=\"bg-white p-6 rounded-lg shadow mb-8\">\r\n                    <div className=\"flex justify-between items-center mb-4\">\r\n                        <h2 className=\"text-xl font-bold\">\r\n                            {editingProduct ? 'Edit Product' : 'Add New Product'}\r\n                        </h2>\r\n                        <button className=\"text-2xl border-none bg-transparent\" onClick={() => setShowForm(false)}>\r\n                            \u00D7\r\n                        </button>\r\n                    </div>\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block font-bold mb-2\" htmlFor=\"name\">Product Name:</label>\r\n                            <input id=\"name\" className=\"w-full p-2 border rounded\" name=\"name\" value={formData.name} onChange={handleInputChange} placeholder=\"Enter product name\" />\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block font-bold mb-2\" htmlFor=\"category\">Category:</label>\r\n                            <select id=\"category\" className=\"w-full p-2 border rounded\" name=\"category\" value={formData.category} onChange={handleInputChange}>\r\n                                {CATEGORIES.map(category => <option key={category} value={category}>{category}</option>)}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block font-bold mb-2\" htmlFor=\"size\">Size:</label>\r\n                            <select id=\"size\" className=\"w-full p-2 border rounded\" name=\"size\" value={formData.size} onChange={handleInputChange}>\r\n                                {SIZES.map(size => <option key={size} value={size}>{size}</option>)}\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block font-bold mb-2\" htmlFor=\"color\">Color:</label>\r\n                            <input id=\"color\" className=\"w-full p-2 border rounded\" name=\"color\" value={formData.color} onChange={handleInputChange} placeholder=\"Enter color (e.g., Blue, Red, Black)\" />\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block font-bold mb-2\" htmlFor=\"price\">Price ($):</label>\r\n                            <input id=\"price\" className=\"w-full p-2 border rounded\" type=\"number\" name=\"price\" value={formData.price.toString()} onChange={handleInputChange} placeholder=\"Enter price\" />\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block font-bold mb-2\" htmlFor=\"image\">Image URL:</label>\r\n                            <input id=\"image\" className=\"w-full p-2 border rounded\" name=\"image\" value={formData.image} onChange={handleInputChange} placeholder=\"Enter image URL\" />\r\n                            {formData.image && <img className=\"mt-2 max-w-[100px] max-h-[100px]\" src={formData.image} alt=\"Product preview\" />}\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block font-bold mb-2\" htmlFor=\"description\">Description:</label>\r\n                            <textarea id=\"description\" className=\"w-full p-2 border rounded\" name=\"description\" value={formData.description} onChange={handleInputChange} placeholder=\"Enter product description\" rows={4} />\r\n                        </div>\r\n\r\n                        <div className=\"flex justify-between\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowForm(false)}>\r\n                                Cancel\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>}\r\n\r\n            <div className=\"overflow-x-auto\">\r\n                <table className=\"w-full bg-white shadow-md rounded-lg overflow-hidden\">\r\n                    <thead>\r\n                        <tr className=\"bg-gray-100\">\r\n                            <th className=\"p-3 text-left\">Image</th>\r\n                            <th className=\"p-3 text-left\">Name</th>\r\n                            <th className=\"p-3 text-left\">Category</th>\r\n                            <th className=\"p-3 text-left\">Size</th>\r\n                            <th className=\"p-3 text-left\">Color</th>\r\n                            <th className=\"p-3 text-left\">Price</th>\r\n                            <th className=\"p-3 text-left\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => <tr key={product.id} className=\"border-t hover:bg-gray-50\">\r\n                                <td className=\"p-3\">\r\n                                    <img className=\"w-20 h-20 object-cover rounded\" src={product.image} alt={product.name} />\r\n                                </td>\r\n                                <td className=\"p-3\">{product.name}</td>\r\n                                <td className=\"p-3\">{product.category || 'N/A'}</td>\r\n                                <td className=\"p-3\">{product.size || 'N/A'}</td>\r\n                                <td className=\"p-3\">{product.color || 'N/A'}</td>\r\n                                <td className=\"p-3\">${product.price}</td>\r\n                                <td className=\"p-3\">\r\n                                    <div className=\"flex gap-2\">\r\n                                        <button className=\"btn btn-secondary text-sm px-2 py-1\" onClick={() => handleEdit(product)}>\r\n                                            Edit\r\n                                        </button>\r\n                                        <button className=\"btn btn-danger text-sm px-2 py-1\" onClick={() => handleDelete(product.id)}>\r\n                                            Delete\r\n                                        </button>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>;\n}\n_s(AdminPage, \"VPWw5BV7viyn7nbW15Vo6SMXFqY=\");\n_c = AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
